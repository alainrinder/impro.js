/*! impro.js 03-04-2018 */

"use strict";var ImPro=new function(){};!function(r){r.extends=function(o,t){return t.prototype=function(t,e){function n(){this.constructor=e.prototype.constructor}return n.prototype=o.prototype,new n}(0,t),t.prototype.ParentClass=o,t},r.super=function(t,e){t.ParentClass.apply(t,e)},r.EnumItem=function(t,e){this.label=t,this.value=e},r.enum=function(t,e){"function"!=typeof e&&(e=r.EnumItem);var n={};if(t instanceof Array)for(var o=0;o<t.length;++o)n[t[o]]=new e(t[o],o);else for(var a in t)n[a]=new e(a,t[a]);return n}}(ImPro),function(f){function t(t,e,n,o,a){var r=window[t+"Array"],i=f.channelProfiles[e];this.dataType=t,this.arrayType=r,this.channelProfile=e,this.channelCount=i,this.width=n,this.height=o,this.dx=i,this.dy=n*i,this.length=n*o*i,this.data=new r(this.length),(a instanceof r||a instanceof Array)&&this.data.set(a)}function e(o,a){return f.extends(t,function(t,e,n){f.super(this,[o,a,t,e,n])})}f.dataTypes=["Uint8Clamped","Uint8","Uint16","Uint32","Int8","Int16","Int32","Float32","Float64"],f.channelProfiles={Gray:1,Rgb:3,Rgba:4},f.imageTypeGroups={all:[]};for(var n=0,o=f.dataTypes.length;n<o;++n)f.imageTypeGroups[f.dataTypes[n]]=[];for(var a in f.channelProfiles)f.imageTypeGroups[a]=[];function r(t,e){return t+e+"Image"}for(n=0,o=f.dataTypes.length;n<o;++n){var i=f.dataTypes[n];for(a in f.channelProfiles){var u=e(i,a);f[r(i,a)]=u,f.imageTypeGroups[i].push(u),f.imageTypeGroups[a].push(u),f.imageTypeGroups.all.push(u)}}f.getImageType=function(t,e){return f[r(t,e)]},f.Uint8ClampedRgbaImage.fromCanvas=function(t){var e=t.getContext("2d").getImageData(0,0,t.width,t.height);return new f.Uint8ClampedRgbaImage(t.width,t.height,e.data)},f.Uint8ClampedRgbaImage.fromDomImage=function(t){var e=document.createElement("canvas");return e.width=t.width,e.height=t.height,e.getContext("2d").drawImage(t,0,0),f.Uint8ClampedRgbaImage.fromCanvas(e)},f.Uint8ClampedRgbaImage.fromLocalFile=function(t,e){var n=new window.Image;n.addEventListener("load",function(){var t=f.Uint8ClampedRgbaImage.fromDomImage(n);e(t)},!1),n.src=t},f.Uint8ClampedRgbaImage.prototype.toCanvas=function(t){void 0===t&&((t=document.createElement("canvas")).width=this.width,t.height=this.height);var e=t.getContext("2d"),n=e.createImageData(t.width,t.height);return n.data.set(this.data),e.putImageData(n,0,0),t},f.Uint8ClampedRgbaImage.prototype.toDataURL=function(){var t=document.createElement("canvas");return t.width=this.width,t.height=this.height,this.toCanvas(t),t.toDataURL("image/png")},f.Uint8ClampedRgbaImage.prototype.toDomImage=function(t){return void 0===t&&(t=new window.Image),t.src=this.toDataURL(),t}}(ImPro),ImPro.Process=function(t,p,d,v){this.name=t,this.lastExecutionTime=null;for(var e=0;e<p.length;++e){var n=p[e];void 0===n.connectable&&(n.connectable=!0),void 0===n.configurable&&(n.configurable=!1),void 0===n.configOptions&&(n.configOptions={})}this.inputConfigs=p,this.outputConfigs=d,this.run=function(t){for(var e=[],n=0;n<p.length;++n){var o=p[n];if(void 0===t[n]){if(void 0===o.default)throw new Error('Missing input "'+o.name+'". Abort.');t[n]=o.default}for(var a=t[n],r=!1,i=0;i<o.types.length;++i){var f=o.types[i];("function"==typeof f&&a instanceof f||"string"==typeof f&&typeof a===f)&&(r=!0,e[n]=f)}if(!r)throw new Error('Invalid type for input "'+o.name+'". Abort.')}var u=performance.now(),l=v(e,t),h=performance.now();this.lastExecutionTime=h-u;for(var s=0;s<d.length;++s){var c=d[s];if(void 0===l[s])throw new Error('Missing output "'+c.name+'". Abort.');var g=l[s],m=c.type(e,t);if(!("function"==typeof m&&g instanceof m||"string"==typeof m&&typeof g===m))throw new Error('Invalid type for output "'+c.name+'". Abort.')}return l}},function(N){N.convolutionKernelSum=function(t){for(var e=0,n=0;n<t.data.length;++n)e+=t.data[n];return e},N.convolutionKernels={Gaussian:function(t){var n=(1+(t>>1))/3;return function(t,e){for(var n=new N.Float32GrayImage(t,t),o=t>>1,a=t,r=-o;r<=o;++r)for(var i=-o;i<=o;++i)n.data[(r+o)*a+1*(i+o)]=e(i,r);return n}(t,function(t,e){return Math.exp(-(t*t+e*e)/(n*n))})}},N.convolutionBorderPolicies=N.enum(["LeaveBlack","LeaveWhite","LeavePristine","CropImage","CropKernel","SquashKernel","DuplicateBorder","MirrorImage"],N.convolutionBorderPolicy=N.EnumItem),N.convolution=new N.Process("Convolution",[{name:"Image",types:N.imageTypeGroups.all},{name:"Kernel",types:[N.Float32GrayImage],connectable:!0,configurable:!0},{name:"Normalize",types:["boolean"],default:!0,connectable:!1,configurable:!0},{name:"BorderPolicy",types:[N.convolutionBorderPolicy],default:N.convolutionBorderPolicies.LeaveBlack,connectable:!1,configurable:!0}],[{name:"Image",type:function(t,e){return t[0]}}],function(t,e){var n=e[0],o=e[1],a=e[2],r=N.getImageType("Float32",n.channelProfile),i=t[0],f=new r(n.width,n.height),u=new i(f.width,f.height),l=n.data,h=f.data,s=u.data,c=o.data,g=(l.length,h.length),m=(s.length,N.channelProfiles[n.channelProfile]),p=0,d=n.width,v=n.height,y=o.width,w=o.height,I=o.width>>1,b=o.height>>1,C=I,P=d-I,T=b,U=v-b,R=0,E=0,x=n.dx,G=n.dy,D=0,L=0,B=0,A=0,M=o.dx,F=o.dy,K=0,S=0,k=x,O=0,q=0,z=0;for(A=0;A<w;++A)for(B=0;B<y;++B)if(0!==(K=c[A*F+B*M])){for(E=0;E<T;++E)for(R=0;R<C;++R)for(S=R*x+E*G,O=((D=R+B-I)<0?1-D:D)*x+((L=E+A-b)<0?1-L:L)*G,p=0;p<m;++p)h[S+p]+=l[O+p]*K;for(E=0;E<T;++E)for(R=C;R<P;++R)for(S=R*x+E*G,O=(D=R+B-I)*x+((L=E+A-b)<0?1-L:L)*G,p=0;p<m;++p)h[S+p]+=l[O+p]*K;for(E=0;E<T;++E)for(R=P;R<d;++R)for(S=R*x+E*G,O=((D=R+B-I)<d?D:2*d-D-1)*x+((L=E+A-b)<0?1-L:L)*G,p=0;p<m;++p)h[S+p]+=l[O+p]*K;for(E=T;E<U;++E)for(R=0;R<C;++R)for(S=R*x+E*G,O=((D=R+B-I)<0?1-D:D)*x+(L=E+A-b)*G,p=0;p<m;++p)h[S+p]+=l[O+p]*K;for(E=T;E<U;++E)for(R=P;R<d;++R)for(S=R*x+E*G,O=((D=R+B-I)<d?D:2*d-D-1)*x+(L=E+A-b)*G,p=0;p<m;++p)h[S+p]+=l[O+p]*K;for(E=U;E<v;++E)for(R=0;R<C;++R)for(S=R*x+E*G,O=((D=R+B-I)<0?1-D:D)*x+((L=E+A-b)<v?L:2*v-L-1)*G,p=0;p<m;++p)h[S+p]+=l[O+p]*K;for(E=U;E<v;++E)for(R=C;R<P;++R)for(S=R*x+E*G,O=(D=R+B-I)*x+((L=E+A-b)<v?L:2*v-L-1)*G,p=0;p<m;++p)h[S+p]+=l[O+p]*K;for(E=U;E<v;++E)for(R=P;R<d;++R)for(S=R*x+E*G,O=((D=R+B-I)<d?D:2*d-D-1)*x+((L=E+A-b)<v?L:2*v-L-1)*G,p=0;p<m;++p)h[S+p]+=l[O+p]*K}for(A=0;A<w;++A)for(B=0;B<y;++B)for(K=c[A*F+B*M],q=(B-I)*x+(A-b)*G,E=T;E<U;++E)for(R=C;R<P;++R)for(O=(S=E*G+R*x)+q,p=0;p<m;++p)h[S+p]+=l[O+p]*K;if(a)if(0===(z=N.convolutionKernelSum(o)))for(S=0;S<g;S+=k)h[S]+=128,h[S+1]+=128,h[S+2]+=128;else for(S=0;S<g;S+=k)h[S]/=z,h[S+1]/=z,h[S+2]/=z;for(S=0;S<g;S+=k)s[S]=Math.round(h[S]),s[S+1]=Math.round(h[S+1]),s[S+2]=Math.round(h[S+2]),s[S+3]=255;return[u]})}(ImPro);