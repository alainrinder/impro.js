/*! impro.js 21-03-2018 */

"use strict";var ImPro;!function(t){t.extends=function(r,t){return t.prototype=function(t,n){function e(){this.constructor=n.prototype.constructor}return e.prototype=r.prototype,new e}(0,t),t.prototype.ParentClass=r,t},t.super=function(t,n){t.ParentClass.apply(t,n)}}(ImPro=new function(){this.init=function(){}}),function(a){function t(t,n,e,r,i){var o=window[t+"Array"],s=a.channelProfiles[n];this.dataType=t,this.arrayType=o,this.channelProfile=n,this.channelCount=s,this.width=e,this.height=r,this.dx=s,this.dy=e*s,this.length=e*r*s,this.data=new o(this.length),(i instanceof o||i instanceof Array)&&this.data.set(i)}function n(r,i){a[r+i+"Image"]=a.extends(t,function(t,n,e){a.super(this,[r,i,t,n,e])})}for(var e in a.dataTypes=["Uint8Clamped","Uint8","Uint16","Uint32","Int8","Int16","Int32","Float32","Float64"],a.channelProfiles={Gray:1,Rgb:3,Rgba:4},a.dataTypes){var r=a.dataTypes[e];for(var i in a.channelProfiles)n(r,i)}}(ImPro),function(o){function t(t,n){this.name=t,this.defaultValue=n}o.BooleanProcessParam=o.extends(t,function(t,n){n=!!n,o.super(this,[t,n])}),o.NumberProcessParam=o.extends(t,function(t,n,e){e="number"==typeof e?e:0,o.super(this,[t,e])}),o.SelectProcessParam=o.extends(t,function(t,n,e){e=e in n?e:null,o.super(this,[t,e])}),o.Process=function(t,n,l,y,d){this.name=t,this.paramConfigs=n,this.inputConfigs=l,this.outputConfigs=y,this.run=function(t,n){for(var e in l){if(!(e in t))throw new Error('Missing input "'+e+'". Abort.');var r=t[e],i=l[e],o=!1;for(var s in i.types)o=o||r instanceof i.types[s];if(!o)throw new Error('Invalid type for input "'+e+'". Abort.')}var a=d(t,n);for(var u in y){if(!(u in a))throw new Error('Missing output "'+u+'". Abort.');var f=a[u],h=y[u],p=!1;for(var c in h.types)p=p||f instanceof h.types[c];if(!p)throw new Error('Invalid type for output "'+u+'". Abort.')}return a}},o.testProcess=new o.Process("Test process",{},{Image:{types:[o.Uint8ClampedGrayImage]}},{Image:{types:[o.Uint8ClampedGrayImage]}},function(t){for(var n=t.Image,e=new o.Uint8ClampedGrayImage(n.width,n.height),r=0,i=n.length;r<i;++r)e.data[r]=255-n.data[r];return{Image:e}})}(ImPro);